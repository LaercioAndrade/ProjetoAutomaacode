{
  "stats": {
    "suites": 1,
    "tests": 2,
    "passes": 1,
    "pending": 0,
    "failures": 1,
    "start": "2020-12-19T02:16:06.458Z",
    "end": "2020-12-19T02:16:49.168Z",
    "duration": 42710,
    "testsRegistered": 2,
    "passPercent": 50,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "1f077e7d-8744-4ab9-812f-0a23f4319602",
      "title": "",
      "fullFile": "cypress/integration/test.feature",
      "file": "cypress/integration/test.feature",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "3a4f7443-dac9-4cc6-85d5-292b6794c997",
          "title": "Realizar Cadastro na página de Automação Demo",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Preencher todos os campos",
              "fullTitle": "Realizar Cadastro na página de Automação Demo Preencher todos os campos",
              "timedOut": null,
              "duration": 20819,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() =>\n    resolveAndRunAfterHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "bb22a5f2-4a95-436e-a052-d8e61a456a08",
              "parentUUID": "3a4f7443-dac9-4cc6-85d5-292b6794c997",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Preencher dados incorretos",
              "fullTitle": "Realizar Cadastro na página de Automação Demo Preencher dados incorretos",
              "timedOut": null,
              "duration": 21600,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() =>\n    resolveAndRunAfterHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {
                "message": "AssertionError: Timed out retrying: Expected to find content: 'Portugues' within the element: <a.ui-corner-all> but never did.",
                "estack": "AssertionError: Timed out retrying: Expected to find content: 'Portugues' within the element: <a.ui-corner-all> but never did.\n    at TestPage.selecionarlanguageincorreto (http://demo.automationtesting.in/__cypress/tests?p=cypress/integration/test.feature:180:48)\n    at Context.eval (http://demo.automationtesting.in/__cypress/tests?p=cypress/integration/test.feature:236:12)\n    at Context.resolveAndRunStepDefinition (http://demo.automationtesting.in/__cypress/tests?p=cypress/integration/test.feature:12069:9)\n    at Context.eval (http://demo.automationtesting.in/__cypress/tests?p=cypress/integration/test.feature:11410:35)",
                "diff": null
              },
              "uuid": "66fa669f-95b9-412c-8c95-4de5def21e55",
              "parentUUID": "3a4f7443-dac9-4cc6-85d5-292b6794c997",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "bb22a5f2-4a95-436e-a052-d8e61a456a08"
          ],
          "failures": [
            "66fa669f-95b9-412c-8c95-4de5def21e55"
          ],
          "pending": [],
          "skipped": [],
          "duration": 42419,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "6.2.1"
    },
    "marge": {
      "options": null,
      "version": "5.1.0"
    }
  }
}